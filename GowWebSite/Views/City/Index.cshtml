@model IEnumerable<GowWebSite.Models.City>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Login.UserName)
        </th>
        <th>&nbsp;</th>
        <th>
            Min Since
        </th>
        <th>&nbsp;</th>
        <th>
            @Html.DisplayNameFor(model => model.ResourceType.Type)
        </th>
        <th>
            SH Lvl
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CityInfo.NeedRSS)
        </th>
        <th></th>
        <th>
            RSS Image
        </th>
    </tr>

    @foreach (var item in Model)
    {
        bool error = false;
        string errorClass = "";
        if ((item.CityInfo.Rally && item.CityInfo.LastRally.HasValue && item.CityInfo.LastRally.Value.AddHours(8) < DateTime.Now)
                || (item.CityInfo.Shield && item.CityInfo.LastShield.AddHours(72) < DateTime.Now))
        {
            error = true;
            errorClass = "danger";
        }
        else if (!item.Login.Active)
        {
            errorClass = "success";
        }

        <tr class=@errorClass>
            <td>
                @if (error)
                {<div class="glyphicon glyphicon-exclamation-sign"></div> }
                @Html.ActionLink(item.CityName, "Edit", "City", new { id = item.CityID }, null)  
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Login.UserName)
            </td>
            <td>
                <a href="@Url.Action("CityLogs", "Log", new { loginID = item.LoginID })" class="modal-link" data-toggle="modal" data-target="#myModal">
                    <span class="glyphicon glyphicon-list"></span>
                </a>
            </td>
            <td>
                @item.CityInfo.City.Login.RunSince.ToString("F0")
            </td>
            <td>
                <a href="@Url.Action("ViewLogin", "Login", new { cityID = item.CityID })" class="modal-link" data-toggle="modal" data-target="#myModal">
                    <span class="glyphicon glyphicon-forward"></span>
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ResourceType.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CityInfo.StrongHoldLevel)
            </td>
            <td>
                @if (item.CityInfo.Upgrade)
                {
                    @Html.DisplayFor(modelItem => item.CityInfo.NeedRSS)
                }
            </td>
            <td class="">
                <a href="@Url.Action("ViewImages", "City", new { cityid = item.CityID })" class="modal-link" data-toggle="modal" data-target="#myModal">
                    <span class="glyphicon glyphicon-camera"></span>
                </a>
                <a href="@Url.Action("ViewImagesLg", "City", new { cityid = item.CityID })" class="modal-link" data-toggle="modal" data-target="#myModal">
                    <span class="glyphicon glyphicon-home"></span>
                </a>
            </td>
            <td>
                <img src='/Images/@(item.CityID)/RSSImage_@(item.CityID).jpg' />
            </td>
        </tr>
    }

</table>

<!-- Modal -->
<div id="myModal" class="modal" role="dialog" tabindex="-1"></div>


@Html.ActionLink("Create New", "CreateFull", null, new { @class = "btn btn-default" })


<script type="text/javascript">
    $(function () {
        // Initialize numeric spinner input boxes
        //$(".numeric-spinner").spinedit();
        // Initialize modal dialog
        // attach modal-container bootstrap attributes to links with .modal-link class.
        // when a link is clicked with these attributes, bootstrap will display the href content in a modal dialog.
        $('body').on('click', '.modal-link', function (e) {
            e.preventDefault();
            $(this).attr('data-target', '#myModal');
            $(this).attr('data-toggle', 'modal');
        });
        //clear modal cache, so that new content can be loaded
        $('#myModal').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
        });

        $('#myModal').on('shown.bs.modal', function () {
            $('#myModal').scrollTop(0);
        });
    });
</script>