@model GowWebSite.Models.City


<div class="col-md-12 col-sm-12">
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CityID)
        @Html.HiddenFor(model => model.LoginID)
        @Html.HiddenFor(model => model.PremiumCity)
        @Html.HiddenFor(model => model.BasicCity)

        <!-- This is the Login Data-->
        <div class="panel panel-default">
            <div class="panel-heading">
                <a data-toggle="collapse" href="#LoginGroup">Login</a>
                <span class="glyphicon glyphicon-question-sign" data-toggle="popover" data-trigger="hover" data-content="This section contains basic login information needed to access your GoW account. All prices are per month."></span>
            </div>
            <div id="LoginGroup" class="panel-collapse collapse in">
                <div class="form-group"></div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.Login.UserName, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the email address associated with the GoW Account."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-7 form-control-static">
                            @if (Request.Url.PathAndQuery.Contains("CreateFull"))
                            {
                                @Html.EditorFor(model => model.Login.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            }
                            else
                            {
                                @Html.DisplayFor(model => model.Login.UserName)
                                @Html.HiddenFor(model => model.Login.UserName)
                            }
                            @Html.ValidationMessageFor(model => model.Login.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.Login.Password, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the password associated with the Username."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.PasswordFor(model => model.Login.Password, new { @class = "form-control", value = Model.Login.Password })
                            @Html.ValidationMessageFor(model => model.Login.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.Login.PIN, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the PIN associated with this UserName (preferably not on every login). If this does not match the service will not be able to login."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.Login.PIN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Login.PIN, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.Login.Active, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This flag sets if this city will be tended to by minions. Non active cities are still charged for."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Login.Active)
                                @Html.ValidationMessageFor(model => model.Login.Active, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.Label("Login Timing", htmlAttributes: new { @class = "control-label" }) 
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the frequency with which the service will log into the account. This is also the basis for the 3 tiers of pricing. The basic functionality includes: Collecting Daily and Alliance Quests; Collecting Athenas gifts; Clicking on Helps; Collecting Alliance Gifts. The price is $.90/$1.50/$3.00 for 6/3/1 hrs respectively. All costs are on a monthly basis."></span>
                        </div>
                        <div class="col-md-10 col-sm-9">
                            @Html.EditorFor(model => model.Login.DelayTier, "RadioButtonListEnum")
                            @Html.ValidationMessageFor(model => model.Login.LoginDelayMin, "", new { @class = "text-danger" })
                        </div>
                        @if (!(ViewBag.PremiumCity || ViewBag.BasicCity))
                        {
                            <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                                ($7.00/$4.00/$2.50)
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- This is the City Info-->
        <div class="panel panel-default">
            <div class="panel-heading">
                <a data-toggle="collapse" href="#CityGroup">City Setup</a>
                <span class="glyphicon glyphicon-question-sign" data-toggle="popover" data-trigger="hover" data-content="This section contains basic city information."></span>
            </div>
            <div id="CityGroup" class="panel-collapse collapse in">
                <div class="form-group"></div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is a name for the city so you know which of your cities is which. This will be displayed on your city list."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!--
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.Kingdom, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="Optional: This is the kingdom your city is in."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.Kingdom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Kingdom, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.LocationX, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="Optional: This is the X coordinates of your city."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.LocationX, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LocationX, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.LocationY, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="Optional: This is the Y coordinates of your city."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.LocationY, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LocationY, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
-->
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.ResourceTypeID, "ResourceTypeID", htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the resource type that this city produces. If you enable banking this will determine what is sent to the bank."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.DropDownList("ResourceTypeID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ResourceTypeID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.Alliance, "Tag", htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="Optional: This is the alliance your city is in."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.Alliance, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Alliance, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.StrongHoldLevel, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the current level of your stronghold."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.CityInfo.StrongHoldLevel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityInfo.StrongHoldLevel, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- This is the Banking Info-->
        <div class="panel panel-default">
            <div class="panel-heading">
                <a data-toggle="collapse" href="#BankGroup">Features</a>
                <span class="glyphicon glyphicon-question-sign" data-toggle="popover" data-trigger="hover" data-content="This section contains the setup information for the features included in the base rate."></span>
            </div>
            <div class="panel-collapse collapse in" id="BankGroup">
                <div class="form-group"></div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.Bank, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign" data-toggle="popover" data-trigger="hover" data-content="This section contains the additional information needed to bank your city resources. Banking is complex to setup, for more detailed information please see the FAQs."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CityInfo.Bank)
                                @Html.ValidationMessageFor(model => model.CityInfo.Bank, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.RSSBankNum, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the city in alphabetical order that your city will bank its non silver resources too. This cannot be greater than 4."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.CityInfo.RSSBankNum, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityInfo.RSSBankNum, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.RssMarches, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the number of marches of your non silver resource you will send to the bank on each login. If this matches or exceeds your max number of marches you will not bank silver."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.CityInfo.RssMarches, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityInfo.RssMarches, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.SilverBankNum, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the city in alphabetical order that your city will bank silver too. This cannot be greater than 4."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.CityInfo.SilverBankNum, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityInfo.SilverBankNum, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.SilverMarches, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the number of marches of your silver that you will send to the bank on each login."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.CityInfo.SilverMarches, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityInfo.SilverMarches, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-offset-1 col-sm-10 col-xs-10">
                            <hr style="margin-bottom:0px; margin-top:0px" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.Rally, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign" data-toggle="popover" data-trigger="hover" data-content="This section contains information needed to attempt to rally your hero. Rallying is complex to setup correctly, for more information see the FAQs."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CityInfo.Rally)
                                @Html.ValidationMessageFor(model => model.CityInfo.Rally, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.RallyX, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the X coordinates of the rally target."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.CityInfo.RallyX, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityInfo.RallyX, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.RallyY, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is the Y coordinates of the rally target."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            @Html.EditorFor(model => model.CityInfo.RallyY, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityInfo.RallyY, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-offset-1 col-sm-10 col-xs-10">
                            <hr style="margin-bottom:0px; margin-top:0px" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.Shield, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign" data-toggle="popover" data-trigger="hover" data-content="This section contains city shielding information. In order to shield, the city must either have 3d shields on hand, or enough gold to buy one."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CityInfo.Shield)
                                @Html.ValidationMessageFor(model => model.CityInfo.Shield, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.Treasury, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign" data-toggle="popover" data-trigger="hover" data-content="This section contains treasury collection information. This will collect the treasury and then re-invest for another 30 days. The cost is $.30 per month."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CityInfo.Treasury)
                                @Html.ValidationMessageFor(model => model.CityInfo.Treasury, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

       
        <!-- This is the Premium Features section-->
        <!--<div class="panel panel-default">
            <div class="panel-heading">
                <a data-toggle="collapse" href="#UpgradeGroup">Premium Features</a>
                <span class="glyphicon glyphicon-question-sign" data-toggle="popover" data-trigger="hover" data-content="This section contains setup information for the two premium features."></span>
            </div>
            <div class="panel-collapse collapse in" id="UpgradeGroup">
                <div class="form-group"></div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.Upgrade, htmlAttributes: new { @class = "control-label" }) 
                            @if (!(ViewBag.PremiumCity))
                            { 
                                @Html.Raw("($.75)")
                            }
                            <span class="glyphicon glyphicon-question-sign" data-toggle="popover" data-trigger="hover" data-content="This section contains building upgrade information. This will upgrade to SH 14, but in order to continue you must manually upgrade to SH 15 and update the Stronghold Level value. For more information please see the FAQs. The cost is $.75 per month."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CityInfo.Upgrade)
                                @Html.ValidationMessageFor(model => model.CityInfo.Upgrade, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.HasGoldMine, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is an indicator if your city has a gold mine. If you are using the upgrade component the goldmine should be moved to the top right most square outside the city. Otherwise this is purely informational."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CityInfo.HasGoldMine)
                                @Html.ValidationMessageFor(model => model.CityInfo.HasGoldMine, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        <div class="col-md-2 col-sm-3 col-xs-5" style="text-align:right;">
                            @Html.LabelFor(model => model.CityInfo.NeedRSS, htmlAttributes: new { @class = "control-label" })
                            <span class="glyphicon glyphicon-question-sign form-control-static" data-toggle="popover" data-trigger="hover" data-content="This is an information flag that is set when the service fails to upgrade any buildings, indicating that it needs additional rss to continue."></span>
                        </div>
                        <div class="col-md-8 col-sm-9 col-xs-6">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CityInfo.NeedRSS)
                                @Html.ValidationMessageFor(model => model.CityInfo.NeedRSS, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-offset-1 col-sm-10 col-xs-10">
                            <hr style="margin-bottom:0px; margin-top:0px" />
                        </div>                        
                    </div>
                </div>
               
            </div>
        </div>
    -->
    
    </div>
</div>

