@model IEnumerable<GowWebSite.Models.Login>

@{
    ViewBag.Title = "Index";
}
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.0/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.0/js/bootstrap-toggle.min.js"></script>
<script>
    function toggleAdmin() {

    }
    $(function () {
        $('#adminNonShield').change(function () {

            //This needs to call a check against each of the other drop downs to make sure it isnt the same.
            //one method for each and dont call ajax if it fails
            var toggleAdmin = $('#adminNonShield').prop('checked');

            $.ajax({
                type: "GET",
                url: "../Login/ToggleAdmin",
                data: { newState: toggleAdmin },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    //alert("Successfully toggled Admin Cities");
                },
                error: function (result) {
                    alert("Failed to toggle Admin cities");
                }
            })


        });
        $('#admin719NonShield').change(function () {

            //This needs to call a check against each of the other drop downs to make sure it isnt the same.
            //one method for each and dont call ajax if it fails
            var toggleAdmin = $('#admin719NonShield').prop('checked');

            $.ajax({
                type: "GET",
                url: "../Login/ToggleAdmin719",
                data: { newState: toggleAdmin },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    //alert("Successfully toggled Admin Cities");
                },
                error: function (result) {
                    alert("Failed to toggle Admin 719 cities");
                }
            })


        });
        $('#betaNonShield').change(function () {

            var toggleBeta = $('#betaNonShield').prop('checked');

            $.ajax({
                type: "GET",
                url: "../Login/ToggleBeta",
                data: { newState: toggleBeta },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    //alert("Successfully toggled Beta Cities");
                },
                error: function (result) {
                    alert("Failed to toggle Beta cities");
                }
            })


        });
    });


</script>

<h2>Logins</h2>

<div class="row" style="padding-bottom:10px">
    <div class="col-lg-3"> Admin Non Shield Cities</div>
    <div class="col-lg-2"><input type="checkbox" checked="@ViewBag.AdminState" id="adminNonShield" data-toggle="toggle" data-size="mini" data-onstyle="success" data-offstyle="danger" data-style="slow"></div>

    <div class="col-lg-3"> Admin Non Shield 719 Cities</div>
    <div class="col-lg-2"><input type="checkbox" checked="@ViewBag.Admin719State" id="admin719NonShield" data-toggle="toggle" data-size="mini" data-onstyle="success" data-offstyle="danger" data-style="slow"></div>
</div>
<div class="row" style="padding-bottom:25px">
    <div class="col-lg-3"> Beta Non Shield Cities</div>
    <div class="col-lg-2"><input type="checkbox" checked="@ViewBag.BetaState" id="betaNonShield" data-toggle="toggle" data-size="mini" data-onstyle="success" data-offstyle="danger" data-style="slow"></div>
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>            
            @Html.DisplayNameFor(model => model.IsMS)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Active)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LoginDelayMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastRun)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InProcess)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsMS)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Active)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LoginDelayMin)
        </td>
        <td>
            <div style="  display: inline-flex;">
                @Html.Raw(item.RunSince.ToString("F0"))  <div class="text-muted">&nbsp;&nbsp;( @Html.Raw(item.LastRun) )</div>
            </div>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.InProcess)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.LoginID }) |
            @Html.ActionLink("Details", "Details", new { id=item.LoginID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.LoginID })
        </td>
    </tr>
}

</table>

